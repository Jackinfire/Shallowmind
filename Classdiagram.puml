@startuml

package backend {
    class AlertSystem {
        - DatabaseLookup databaseLookup
        + AlertSystem(DatabaseLookup databaseLookup)
        + List<String> monitorPatientPosture(int patientId)
    }

    class CurrentTime {
        - static final String DEFAULT_TIME_FORMAT
        - static final String DEFAULT_TIME_ZONE
        + static String getCurrentTime()
    }

    class exportToPdf {
        - Patient patient
        + exportToPdf(Patient patient)
        + void generatePatientDetailsPDF(String fileName)
        - void addPersonalDetails(Document document)
        - void addInterventionHistory(Document document)
    }

    class Patient {
        - int patientId
        - DatabaseLookup dbHelper
        - String tableName
        + Patient(int patientId)
        + Integer getPatientId()
        + List<String> getInterventionTime()
        + List<String> getInterventionHandledBy()
        + List<String> getInterventionPosition()
        + List<Integer> getInterventionLength()
        + List<String> getProcedureTime()
        + List<String> getProcedureName()
        + String getName()
        + byte[] getImageAsBytes()
        + Integer getAge()
        + String getGender()
        + String getDiagnosis()
        + List<String> getPosture()
        + List<String> getMedicationDetails()
        + int getRoomNumber()
        + String getWard()
        + String getContactNumber()
        + String getDocInCharge()
        + String getDiagnosisDate()
        + String getPatientDetails()
        + void setName(String name)
        + void setAge(int age)
        + void setGender(String gender)
        + void setDiagnosis(String diagnosis)
        + void setPosture(String posture)
        + void setRoomNumber(int roomNumber)
        + void setWard(String ward)
        + void setContactNumber(String contactNumber)
    }

    class DatabaseLookup {
        - static final String DB_URL
        + Connection connect()
        + List<Map<String, Object>> retrieveData(String tableName)
        + void updateField(String tableName, String columnName, Object newValue, String conditionColumn, Object conditionValue)
        + int getNumberOfPatients()
        + boolean addNewPatient(String name, int age, String gender, String emergencyContact, String diagnosis, String diagnosisDate, String doctorInCharge, String ward, int roomNum)
    }

    AlertSystem --> DatabaseLookup
    exportToPdf --> Patient
    Patient --> DatabaseLookup
}

package view.dashboard {
    class AlertsPanel {
        + AlertsPanel()
        - VBox createAlert(String severity, String name, String location, String time)
    }

    class LiveMonitor extends Thread {
        - List<PatientBox> patientBoxes
        - List<Patient> patients
        - StatusPanel statusPanel
        + LiveMonitor(StatusPanel statusPanel, List<PatientBox> patientBoxes, List<Patient> patients)
        + void run()
    }

    class PatientBox extends HBox {
        - String alertColor
        + PatientBox(Patient patient)
        + void setAlertColor(String alertColor)
        - ImageView addPatientImage(Patient patient)
    }

    class PatientMonitorApp extends Application {
        + void start(Stage primaryStage)
        + static void main(String[] args)
    }

    class PatientsPanel extends ScrollPane {
        + PatientsPanel(StatusPanel statusPanel)
    }

    class StatusPanel extends UpperPanel {
        - int greenPatients
        - int amberPatients
        - int redPatients
        - VBox greenBox
        - VBox amberBox
        - VBox redBox
        + StatusPanel()
        + void updateGreenCount(int greenPatients)
        + void updateAmberCount(int amberPatients)
        + void updateRedCount(int redPatients)
    }

    class UpperBox extends HBox {
        - StatusPanel statusPanel
        + UpperBox()
        + StatusPanel getStatusPanel()
    }

    class UpperPanel extends VBox {
        - Label title
        + UpperPanel(String panelTitle)
    }

    AlertsPanel --|> UpperPanel
    StatusPanel --|> UpperPanel
    UpperBox --> StatusPanel
    UpperBox --> AlertsPanel
    PatientsPanel --> LiveMonitor
    PatientsPanel --> PatientBox
    PatientBox --> Patient
    LiveMonitor --> StatusPanel
    LiveMonitor --> PatientBox
    LiveMonitor --> Patient
    PatientMonitorApp --> UpperBox
    PatientMonitorApp --> PatientsPanel
}

package view.details {
    class PatientProfile extends Stage {
        - Patient patient
        + PatientProfile(int patientID)
        - StackPane createRoundedLabel(String text)
        - ImageView addPatientImage(Patient patient)
    }
}

package view.utils {
    class WindowDimensions {
        + static double windowWidth
        + static double windowHeight
    }
}

PatientProfile --> Patient
PatientProfile --> exportToPdf

@enduml
